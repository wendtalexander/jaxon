# models.adex { #jaxon.models.adex }

`models.adex`



## Classes

| Name | Description |
| --- | --- |
| [AdExParams](#jaxon.models.adex.AdExParams) | AdEx paramater class. |

### AdExParams { #jaxon.models.adex.AdExParams }

```python
models.adex.AdExParams(
    fs,
    ref_period,
    noise_strength,
    tau_m,
    exp_threshold,
    exp_deltat,
    v_base,
    threshold,
    tau_adapt,
    deltat_adapt,
    a,
    b,
)
```

AdEx paramater class.

#### Attributes {.doc-section .doc-section-attributes}

<code>[**fs**]{.parameter-name} [:]{.parameter-annotation-sep} [int]{.parameter-annotation}</code>

:   sampling period ex 30_000 Hz

<code>[**ref_period**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   refactory period

<code>[**noise_strength**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   noise

<code>[**tau_m**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   membran time constant

<code>[**exp_threshold**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   exponetial threshold

<code>[**exp_deltat**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   exponetial sampling period

<code>[**v_base**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   voltage reset

<code>[**threshold**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   threshold for spike firing

<code>[**tau_adapt**]{.parameter-name} [:]{.parameter-annotation-sep} [flaot]{.parameter-annotation}</code>

:   Adapation time constant

<code>[**deltat_adapt**]{.parameter-name} [:]{.parameter-annotation-sep} [flaot]{.parameter-annotation}</code>

:   Adaptation sampling period

<code>[**a**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   parameter

<code>[**b**]{.parameter-name} [:]{.parameter-annotation-sep} [float]{.parameter-annotation}</code>

:   parameter

## Functions

| Name | Description |
| --- | --- |
| [simulate](#jaxon.models.adex.simulate) | Simulate an AdEx neuron in JAX. |

### simulate { #jaxon.models.adex.simulate }

```python
models.adex.simulate(key, stimulus, params)
```

Simulate an AdEx neuron in JAX.

#### Parameters {.doc-section .doc-section-parameters}

<code>[**key**]{.parameter-name} [:]{.parameter-annotation-sep} [jax.random.PRNGKey]{.parameter-annotation}</code>

:   Random key for noise generation.

<code>[**stimulus**]{.parameter-name} [:]{.parameter-annotation-sep} [1-D jnp.ndarray]{.parameter-annotation}</code>

:   Input current

<code>[**params**]{.parameter-name} [:]{.parameter-annotation-sep} [AdExParams parameter]{.parameter-annotation}</code>

:   

#### Returns {.doc-section .doc-section-returns}

<code>[**spikes**]{.parameter-name} [:]{.parameter-annotation-sep} [1-D jnp.ndarray]{.parameter-annotation}</code>

:   0/1 array with spikes at each time step.